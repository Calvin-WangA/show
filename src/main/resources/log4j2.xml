<?xml version="1.0" encoding="UTF-8"?>
<!-- 该Log可以自动重配置该文件,通过monitorInterval="30"该属性可以指定更新配置文件的时间 -->
<Configuration monitorInterval="30"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <!-- 该标签可以引入其他写的log配置文件 
         <xi:include href=""/>
    -->
    <Appenders>
        <!-- 该配置是配置一个会自动生成日志文件的配置。 -->
        <RollingFile name="RollingFile" fileName="logs/app.log" filePattern="logs/app-%d{MM-dd-yyyy}.log.gz"
                     ignoreExceptions="false">
            <PatternLayout>
                <Pattern>%d %p %c{1.} [%t] %m%n</Pattern>
            </PatternLayout>
            <!-- 定义一个触发策略 -->
            <Policies>
                <!-- 启动时触发 -->
                <OnStartupTriggeringPolicy />
                <!-- 达到一定大小是触发 -->
                <SizeBasedTriggeringPolicy size="20 MB" />
                <!-- 基于时间触发 -->
                <TimeBasedTriggeringPolicy />
            </Policies>
            <!-- 指定重做日志策略，如下表示的是当生成的日志文件有20个时，开始重做日志 -->
            <DefaultRolloverStrategy max="20"/>
        </RollingFile>
        <Console name="STDOUT" target="SYSTEM_OUT">
            <!-- 具体设置参考log4j指导文件 -->
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss} %-3p{length=5} %c{3}- %msg %n"/>
        </Console>
        <File name="myLog" fileName="A1.log" append="false">
            <PatternLayout pattern="%t %-5p %c{2} - %m%n"/>
        </File>
        <!-- 配置容错appender -->
        <Failover name="Failover" primary="RollingFile">
            <Failovers>
                <AppenderRef ref="STDOUT"/>
            </Failovers>
        </Failover>
    </Appenders>
    <Loggers>
       
        <!-- 通过level属性可以指定指定类的日志输出级别，而其他类默认为root的输出级别
                                           由于特定的logger也指定了appender，且log4j默认是孩子信息是会传递到父亲哪里的，
                                           所以如果是下面这样配置，则会造成输出两次bar的日志信息，我们可以通过additivity="false"
                                           属性来防止这种传递行为。
         
        <Logger name="com.wch.controller.UserController" level="TRACE" additivity="false">
            <AppenderRef ref="STDOUT"/>
        </Logger>
       -->
        <!-- 当类里面使用了不同的级别方法记录日志时，则使用不同的级别输出的信息会不一样，具体看文档 -->
        <Root level="DEBUG">
            <AppenderRef ref="STDOUT"/>
        </Root>
    </Loggers>
</Configuration>